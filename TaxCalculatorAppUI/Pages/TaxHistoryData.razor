@page "/tax/history"

@inject ITaxService _taxService

@if (taxHistory == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card mt-3 mb-3">
                <div class="card-header">
                    <h2>Calculated Tax History</h2>
                </div>
                <div class="card-body">
                    <table class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Annual Income</th>
                                <th>Tax Amount</th>
                                <th>Postal Code</th>
                                <th>Date Created</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var tax in taxHistory)
                            {
                                <tr>
                                    <td>@string.Format("{0:C}", tax.AnnualIncome)</td>
                                    <td>@string.Format("{0:C}", tax.TaxAmount)</td>
                                    <td>@tax.PostalCode</td>
                                    <td>@string.Format("{0:dd/MM/yyyy}", tax.Created)</td>
                                    <td><button type="button" class="btn btn-danger btn-sm" @onclick="@(() => DeleteItem(tax.Id))">Delete</button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>    
}

@code {
    private IEnumerable<TaxHistory> taxHistory;

    protected override async Task OnInitializedAsync()
    {
        var result = await _taxService.GetCalculatedTaxHistory();
        taxHistory = result;
    }

    private async Task DeleteItem(int id)
    {        
        await _taxService.DeleteTaxHistoryItem(id);
        taxHistory = taxHistory.Where(x => x.Id != id);
    }
}
